##-----------------------------------------------------------------
## Add delimiters in a delimiter separated list to all items but the last
##
## Param: $index      - pass in $velocityCount
## Param: $list       - pass in your velocity list variable
## Param: $delimiter  - the delimiter to use. This method will not add spaces by itself
##                      so provide the necessary space for this argument. For example: ", "
##-----------------------------------------------------------------
#macro( delimiterIfNeeded $index $list $delimiter )
#set ( $lastone = $list.size() - 1 )
#if( $index <= $lastone )$delimiter#else#end
#end
##(End Macro delimiterIfNeeded)------------------------------------
##
##
##-----------------------------------------------------------------
## Generates the source code conditional check to match all method query
## parameters with the URI query parameters
##
## Param: $methodParameterNames - The list of method parameter names
##-----------------------------------------------------------------
#macro( generateQueryParameterNamesMatcher $methodParameterNames)
queryParameterNames.size() == $methodParameterNames.size()##
#if ($methodParameterNames.size() > 0) && #end
#foreach( $parameterName in $methodParameterNames )queryParameterNames.contains("$parameterName")#delimiterIfNeeded( $velocityCount $methodParameterNames " && " )#end
#end
##(End Macro generateQueryParameterNamesMatcher)-------------------
##
##
##-----------------------------------------------------------------
## Generates the parameter list for the delegate method invokation
##
## Param: $paramaters - the list of Parameter objects for the method invokation
##-----------------------------------------------------------------
#macro( generateParamsList $paramaters )
#foreach( $parameter in $paramaters )
#if(     $parameter.isProjection() )
projection#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif( $parameter.isSelection() )
selection#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif( $parameter.isSelectionArgs() )
selectionArgs#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif( $parameter.isSortOrder() )
sortOrder#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif( $parameter.isContentValues() )
contentValues#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif( $parameter.isContentUri() )
uri#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif( $parameter.isString() )
#if(         $parameter.isPathParameter() )
pathSegments.get($parameter.getPathParamPosition())#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif(     $parameter.isQueryParameter() )
uri.getQueryParameter("$parameter.getQueryParameterName()")#delimiterIfNeeded( $velocityCount $paramaters ", " )
#end##if $parameter.isPathParameter()
#else
#if(         $parameter.isPathParameter() )
pathSegments.get($parameter.getPathPosition())#delimiterIfNeeded( $velocityCount $paramaters ", " )
#elseif(     $parameter.isQueryParameter() )
uri.getQueryParameter("$parameter.getQueryParameterName()")#delimiterIfNeeded( $velocityCount $paramaters ", " )
#end##if $parameter.isPathParameter()
#end##if $parameter.isProjection()
#end##for each $parameter in $paramaters
#end##macro
##(End Macro generateParamsList)-----------------------------------
##
##
package com.nudroid.persistence;

import android.content.ContentValues;
import android.database.Cursor;
import android.net.Uri;

import com.nurun.persistence.temp.vision.ContentUriRouter;

import $delegateClass.getName();

#[[/**
 * @author Auto-generated by Nudroid's persistence annotation processor.
 */]]#
public class ${delegateClass.getSimpleName()}Router implements ContentUriRouter {

    private $delegateClass.getSimpleName() delegate;

    public ${delegateClass.getSimpleName()}Router($delegateClass.getSimpleName() delegate) {
    
        this.delegate = delegate;
    }

#[[    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#update(android.net.Uri, android.content.ContentValues,
     *      java.lang.String, java.lang.String[])
     */]]#
    @Override
    public int update(Uri uri, ContentValues contentValues, String selection, String[] selectionArgs) {

        return 0;
    }

#[[    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#query(android.net.Uri, java.lang.String[],
     *      java.lang.String, java.lang.String[], java.lang.String)
     */]]#
    @Override
    public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {

        java.util.Set<String> queryParameterNames = uri.getQueryParameterNames();
    
        switch (ContentUriRegistry.URI_MATCHER.match(uri)) {
#foreach( $uriId in $delegateClass.getUriIds() )
        case $uriId:

#foreach( $delegateMethod in $delegateClass.getUriToDelegateMethodMap().get($uriId) )            
            if (#generateQueryParameterNamesMatcher($delegateMethod.getQueryPlaceholders())) {

#if ( $delegateMethod.hasUriPlaceholders() )
                java.util.List<String> pathSegments = uri.getPathSegments();
#end
                return delegate.$delegateMethod.getName()(#generateParamsList($delegateMethod.getParameters()));
            }
            
#end

            throw new IllegalArgumentException(String.format("Uri %s is not properly mapped in content provider delegate %s",
                    uri, delegate.getClass()));
#end
        default:
        
            throw new IllegalArgumentException(String.format("Uri %s is not properly mapped in content provider delegate %s",
                    uri, delegate.getClass()));
        }
    }

#[[    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#insert(android.net.Uri, android.content.ContentValues)
     */]]#
    @Override
    public Uri insert(Uri uri, ContentValues values) {

        return null;
    }

#[[    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#getType(android.net.Uri)
     */]]#
    @Override
    public String getType(Uri uri) {

        return null;
    }

#[[    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#delete(android.net.Uri, java.lang.String,
     *      java.lang.String[])
     */]]#
    @Override
    public int delete(Uri uri, String selection, String[] selectionArgs) {

        return 0;
    }

    @SuppressWarnings("unchecked")
    private <T> T convert(String queryParameter, Class<T> clazz) {

        if (clazz.equals(Integer.class)) {
            return (T) Integer.valueOf(Integer.parseInt(queryParameter));
        }

        if (clazz.equals(Long.class)) {
            return (T) Long.valueOf(Long.parseLong(queryParameter));
        }

        if (clazz.equals(Float.class)) {
            return (T) Float.valueOf(Float.parseFloat(queryParameter));
        }

        if (clazz.equals(Double.class)) {
            return (T) Double.valueOf(Double.parseDouble(queryParameter));
        }
        
        throw new IllegalArgumentException(String.format("Unable to convert string '%s' to type %s.", queryParameter, clazz.getName()));
    }
}