##-----------------------------------------------------------------
## Add commas in a comma separated list to all items but the last
## Param: $index - pass in $velocityCount
## Param: $list  - pass in your velocity list variable
##-----------------------------------------------------------------
#macro( delimiterIfNeeded $index $list $delimiter )
#set ( $lastone = $list.Count - 1 )
#if( $index <= $lastone )$delimiter
#else

#end
#end

#macro( generateQueryParameterNamesMatcher $parameterSetName $methodParameterNames)
#foreach( $parameterName in $methodParameterNames) ${parameterSetName}.contains($parameterName) #delimiterIfNeeded( $velocityCount $methodParameterNames "&&" ) #end
#end

#macro( generateParamsList $paramaters)

#macro( generateParamsList $paramaters)
#foreach( $parameter in $paramaters)
#if($parameter.isProjection()) projection#delimiterIfNeeded( $velocityCount $paramaters "," )
#elseif($parameter.isSelection()) selection#delimiterIfNeeded( $velocityCount $paramaters "," )
#elseif($parameter.isSelectionArgs()) selectionArgs#delimiterIfNeeded( $velocityCount $paramaters "," )
#elseif($parameter.isSortOrder()) sortOrder#delimiterIfNeeded( $velocityCount $paramaters "," )
#elseif($parameter.isContentValues()) contentValues#delimiterIfNeeded( $velocityCount $paramaters "," )
#elseif($parameter.isPositionalParameter()) pathSegments.get($parameter.getPathPosition())#delimiterIfNeeded( $velocityCount $paramaters "," )
#elseif($parameter.isQueryParameter()) uri.getQueryParameter($parameter.getQueryParameterName())#delimiterIfNeeded( $velocityCount $paramaters "," )
#end
#end
#end
package com.nudroid.persistence;

import java.util.Set;

import android.content.ContentValues;
import android.database.Cursor;
import android.net.Uri;

import com.nurun.persistence.temp.vision.ContentUriRouter;

import $delegateClass;

#[[
/**
 * @author Auto-generated by Nudroid's persistence annotation processor.
 */
]]#
public class ${delegateClass}Router implements ContentUriRouter {

    private $delegateClass delegate;

    public ${delegateClass}Router($delegateClass delegate) {
    
        this.delegate = delegate;
    }

#[[    
    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#update(android.net.Uri, android.content.ContentValues,
     *      java.lang.String, java.lang.String[])
     */
]]#
    @Override
    public int update(Uri uri, ContentValues contentValues, String selection, String[] selectionArgs) {

        return 0;
    }

#[[
    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#query(android.net.Uri, java.lang.String[],
     *      java.lang.String, java.lang.String[], java.lang.String)
     */
]]#
    @Override
    public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {

        List<String> pathSegments = uri.getPathSegments();
        Set<String> parameterNames = uri.getQueryParameterNames();
    
        switch (ContentUriRegistry.URI_MATCHER.match(uri)) {
#foreach( $uriId in $delegateMethods.getUriIds() )
        case $uriId:

#foreach( $delegateMethod in $delegateMethods )            
#set( $parameterCount = $delegateMethod.queryParameterCount())
#if ( $parameterCount == 0 )
            if (parameterNames.size() == $parameterCount) {

                return delegate.$delegateMethod.getName()(#generateParamsList($delegateMethod.params()));
            }
#else
            if (parameterNames.size() == $parameterCount && #generateQueryParameterNamesMatcher('parameterNames', $delegateMethod.queryParameters())) {

                return delegate.$delegateMethod.getName()(#generateParamsList($delegateMethod.params()));
            }
#end
            throw new IllegalArgumentException(String.format("Uri %s is not mapped in content provider delegate %s",
                    uri, delegate.getClass()));
#end
        default:
            throw new IllegalArgumentException(String.format("Uri %s is not mapped in content provider delegate %s",
                    uri, delegate.getClass()));
        }
    }

#[[
    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#insert(android.net.Uri, android.content.ContentValues)
     */
]]#
    @Override
    public Uri insert(Uri uri, ContentValues values) {

        return null;
    }

#[[
    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#getType(android.net.Uri)
     */
]]#
    @Override
    public String getType(Uri uri) {

        return null;
    }

#[[
    /**
     * <p/>
     * {@inheritDoc}
     * 
     * @see com.nurun.persistence.temp.vision.ContentUriRouter#delete(android.net.Uri, java.lang.String,
     *      java.lang.String[])
     */
]]#
    @Override
    public int delete(Uri uri, String selection, String[] selectionArgs) {

        return 0;
    }

}